
AdmissionReview { 
	types: TypeMeta { api_version: "admission.k8s.io/v1", kind: "AdmissionReview" }, 
	request: Some(
		AdmissionRequest { 
			types: TypeMeta { api_version: "", kind: "" }, 
			uid: "17e216eb-39ec-4a83-b29c-f3ba9bd1165f", 
			kind: GroupVersionKind { group: "", version: "v1", kind: "Pod" }, 
			resource: GroupVersionResource { group: "", version: "v1", resource: "pods", api_version: "" }, 
			sub_resource: None, 
			request_kind: Some(GroupVersionKind { group: "", version: "v1", kind: "Pod" }), 
			request_resource: Some(GroupVersionResource { group: "", version: "v1", resource: "pods", api_version: "" }), 
			request_sub_resource: None, 
			name: "my-pod", 
			namespace: Some("nba-test"), 
			operation: Create, 
			user_info: UserInfo { extra: None, groups: Some(["system:masters", "system:authenticated"]), 
			uid: None, 
			username: Some("system:admin") }, 
			object: Some(DynamicObject { 
				types: Some(TypeMeta { api_version: "v1", kind: "Pod" }), 
				metadata: ObjectMeta { annotations: Some({"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{\"kubernetes.io/egress-bandwidth\":\"1M\",\"kubernetes.io/ingress-bandwidth\":\"1M\"},\"name\":\"my-pod\",\"namespace\":\"nba-test\"},\"spec\":{\"containers\":[{\"image\":\"default-registry:61940/networkbandwidthannotator:0.1.0\",\"name\":\"my-container\",\"resources\":{\"limits\":{\"cpu\":4,\"egress-bandwidth\":\"1M\",\"ingress-bandwidth\":\"1M\"},\"requests\":{\"cpu\":2,\"egress-bandwidth\":\"1M\",\"ingress-bandwidth\":\"1M\"}}}]}}\n", "kubernetes.io/egress-bandwidth": "1M", "kubernetes.io/ingress-bandwidth": "1M"}), cluster_name: None, creation_timestamp: None, deletion_grace_period_seconds: None, deletion_timestamp: None, finalizers: None, generate_name: None, generation: None, labels: None, managed_fields: Some([ManagedFieldsEntry { api_version: Some("v1"), fields_type: Some("FieldsV1"), fields_v1: Some(FieldsV1(Object {"f:metadata": Object {"f:annotations": Object {".": Object {}, "f:kubectl.kubernetes.io/last-applied-configuration": Object {}, "f:kubernetes.io/egress-bandwidth": Object {}, "f:kubernetes.io/ingress-bandwidth": Object {}}}, "f:spec": Object {"f:containers": Object {"k:{\"name\":\"my-container\"}": Object {".": Object {}, "f:image": Object {}, "f:imagePullPolicy": Object {}, "f:name": Object {}, "f:resources": Object {".": Object {}, "f:limits": Object {".": Object {}, "f:cpu": Object {}, "f:egress-bandwidth": Object {}, "f:ingress-bandwidth": Object {}}, "f:requests": Object {".": Object {}, "f:cpu": Object {}, "f:egress-bandwidth": Object {}, "f:ingress-bandwidth": Object {}}}, "f:terminationMessagePath": Object {}, "f:terminationMessagePolicy": Object {}}}, "f:dnsPolicy": Object {}, "f:enableServiceLinks": Object {}, "f:restartPolicy": Object {}, "f:schedulerName": Object {}, "f:securityContext": Object {}, "f:terminationGracePeriodSeconds": Object {}}})), manager: Some("kubectl-client-side-apply"), operation: Some("Update"), subresource: None, time: Some(Time(2022-12-28T22:24:45Z)) }]), name: Some("my-pod"), namespace: Some("nba-test"), owner_references: None, resource_version: None, self_link: None, uid: None }, 
				data: Object {
					"spec": Object {
						"volumes": Array [Object {"name": String("kube-api-access-wt85r"), 
						"projected": Object {"sources": Array [Object {"serviceAccountToken": Object {"expirationSeconds": Number(3607), 
						"path": String("token")}}, 
						Object {"configMap": Object {"name": String("kube-root-ca.crt"), "items": Array [Object {"key": String("ca.crt"), "path": String("ca.crt")}]}}, Object {"downwardAPI": Object {"items": Array [Object {"path": String("namespace"), "fieldRef": Object {"apiVersion": String("v1"), "fieldPath": String("metadata.namespace")}}]}}], "defaultMode": Number(420)}}], "containers": Array [Object {"name": String("my-container"), "image": String("default-registry:61940/networkbandwidthannotator:0.1.0"), 
						"resources": Object {"limits": Object {"cpu": String("4"), "egress-bandwidth": String("1M"), "ingress-bandwidth": String("1M")}, "requests": Object {"cpu": String("2"), "egress-bandwidth": String("1M"), "ingress-bandwidth": String("1M")}}, "volumeMounts": Array [Object {"name": String("kube-api-access-wt85r"), "readOnly": Bool(true), "mountPath": String("/var/run/secrets/kubernetes.io/serviceaccount")}], "terminationMessagePath": String("/dev/termination-log"), "terminationMessagePolicy": String("File"), "imagePullPolicy": String("IfNotPresent")}], "restartPolicy": String("Always"), "terminationGracePeriodSeconds": Number(30), "dnsPolicy": String("ClusterFirst"), "serviceAccountName": String("default"), "serviceAccount": String("default"), "securityContext": Object {}, "schedulerName": String("default-scheduler"), "tolerations": Array [Object {"key": String("node.kubernetes.io/not-ready"), "operator": String("Exists"), "effect": String("NoExecute"), "tolerationSeconds": Number(300)}, Object {"key": String("node.kubernetes.io/unreachable"), "operator": String("Exists"), "effect": String("NoExecute"), "tolerationSeconds": Number(300)}], "priority": Number(0), "enableServiceLinks": Bool(true), "preemptionPolicy": String("PreemptLowerPriority")}, "status": Object {}} }), old_object: None, dry_run: false, options: Some(RawExtension(Object {"kind": String("CreateOptions"), "apiVersion": String("meta.k8s.io/v1"), "fieldManager": String("kubectl-client-side-apply"), "fieldValidation": String("Strict")})) 
			}
	),
	response: None 
}
